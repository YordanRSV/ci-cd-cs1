name: "Deploy to ECS"

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: docker build -t yordan-app .

      - name: Tag Docker image
        run: docker tag yordan-app:latest ${{ steps.login-ecr.outputs.registry }}/yordan-app:latest

      - name: Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/yordan-app:latest

      - name: Download task definition
        run: aws ecs describe-task-definition --task-definition yordan-app-task --query taskDefinition > task-definition.json

      - name: Render ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: web-app
          image: ${{ steps.login-ecr.outputs.registry }}/yordan-app-task:3

      - name: Deploy to ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: yordan-app-service
          cluster: yordan-ecs-cluster